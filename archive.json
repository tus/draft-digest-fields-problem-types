{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-09-17T00:26:31.234309+00:00",
  "repo": "tus/draft-digest-fields-problem-types",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOMO7RzM6OzuxQ",
      "title": "Clarify the problem statement and focus of the draft more",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/1",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Generally speaking, digests are \"bidirectional\". \r\n\r\n* A client can send them in relation to the request message, a server can optionally validate them\r\n* A server can sent them in relation to the response message, a client can optionally validate them\r\n\r\n\"Problem details\" is specific to response messages. So only a server can indicate to a client that something was wrong about the request itself (or that a problem occurred while processing the valid request).\r\n\r\nThe intro contains most of the right words but I think it can be improved a bit. I would break the final sentence of the first paragraph off, and expand on that some more. I'd delete some of the redefinition of things too, to cut down the text. For example,\r\n\r\n```\r\n[DIGEST] by design does not define, require or recommend any specific behavior for error handling related integrity. The responsibility is instead delegated to applications. This draft defines a set of problem types [PROBLEM] that can be used by server applications to indicate that a problem was encountered while dealing with a request carrying integrity fields and integrity preference fields.\r\n\r\nFor example, a request message may include content alongside Content-Digest and Repr-Digest header fields that use a digest algorithm the server does not support. An application could decide to reject this request because it cannot validate the integrity. Using a problem type, the server can provide machine-readable error details to aid debugging or error reporting.\r\n\r\n~~~\r\nHTTP/1.1 400 Bad Request\r\nContent-Type: application/problem+json\r\n\r\n{\r\n  \"type\": \"https://iana.org/assignments/http-problem-types#unsupported-hashing-algorithm\",\r\n  \"title\": hashing algorithm is not supported,\r\n  \"unsupported-algorithm\": \"foo\",\r\n  \"supported-algorithms\": [\"sha-256\", \"sha-512\"]\r\n}\r\n~~~\r\n```",
      "createdAt": "2024-07-08T15:17:58Z",
      "updatedAt": "2024-07-08T20:38:06Z",
      "closedAt": "2024-07-08T20:32:37Z",
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "Thanks, your proposal makes the intro a lot lighter and clearer that this draft is concerned about the first use of digest fields:\r\n\r\n> A client can send them in relation to the request message, a server can optionally validate them",
          "createdAt": "2024-07-08T20:31:49Z",
          "updatedAt": "2024-07-08T20:38:06Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOMO7RzM6OzzvQ",
      "title": "Supported-algorthms duplicates want- response header?",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/2",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "You say\r\n\r\n> A server MAY use this problem type when responding to a request, whose integrity or integrity preference fields reference a hashing algorithm that the server can not or does not want to support for this request, and if the server wants to indicate this problem to the sender.\r\n\r\nFrom https://httpwg.org/specs/rfc9530.html#want-fields\r\n\r\n> If Want-Content-Digest or Want-Repr-Digest are used in a response, it indicates that the server would like the client to provide the respective Integrity field on future requests.\r\n\r\nThe Want- headers are a preference list of algorithms, It seems like Supported-algorthms duplicates the capability, which is not ideal. The unsupported-algorithm field is still usefule, since it might not be clear what algorithm specificall failed (imagine a request that contained multiple integrity fields with different algorithms and the application mandated that all of them must validate).\r\n\r\n",
      "createdAt": "2024-07-08T15:28:01Z",
      "updatedAt": "2024-07-08T20:00:06Z",
      "closedAt": "2024-07-08T20:00:06Z",
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "Right, problem types gave me the ability to define additional members and I couldn't hold myself back from using it. Thanks!",
          "createdAt": "2024-07-08T19:59:14Z",
          "updatedAt": "2024-07-08T19:59:14Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOMO7RzM6Oz01N",
      "title": "Don't mandate client behaviour",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/3",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Related to #2, you say  \r\n\r\n> If the sender receives this problem type, it SHOULD retry the request while picking another hashing algorithm. If the response includes an array of supported algorithms, it SHOULD choose one of them.\r\n\r\nThis document should, IMO, focus on server signals. What to do with them is still left as an exercise for the application (or another spec). Instead, we can relax the wording to be like\r\n\r\n\"this problem type is a hint to the client about algorithm support, the client could use this information to retry the request with a different algorithm\"",
      "createdAt": "2024-07-08T15:30:16Z",
      "updatedAt": "2024-07-08T19:51:03Z",
      "closedAt": "2024-07-08T19:51:03Z",
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOMO7RzM6Oz3En",
      "title": "expected-digest seems prescient ",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/4",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm not sure how a server calculating a digest on request bytes can know what the expected value was, isn't that the `provided-digest`? Maybe its better to rename the field to `calculated-digest`. That takes any notion of opinion out of the interaction.",
      "createdAt": "2024-07-08T15:34:28Z",
      "updatedAt": "2024-07-08T19:49:59Z",
      "closedAt": "2024-07-08T19:49:59Z",
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "`calculated-digest` is better, I agree. Thanks!",
          "createdAt": "2024-07-08T19:48:13Z",
          "updatedAt": "2024-07-08T19:48:13Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOMO7RzM6Oz3yO",
      "title": "This may reveal information about intermediaries",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/5",
      "state": "OPEN",
      "author": "LPardue",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": ".. and that might need a security consideration",
      "createdAt": "2024-07-08T15:35:54Z",
      "updatedAt": "2024-07-08T15:35:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOMO7RzM6Oz46y",
      "title": "idea: maybe signatures would benefit from some problem types too?",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/6",
      "state": "OPEN",
      "author": "LPardue",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Time is short so don't do this now but I suggest reaching out to Justin Richer about HTTP signatures to see if they might benefit from some problem types too. See https://httpwg.org/specs/rfc9421.html#rfc.section.1.4 and specifically\r\n\r\n> If the response is from an HTTP API, a response with an HTTP status code such as 400 (Bad Request) could include more details [[RFC7807]](https://httpwg.org/specs/rfc9421.html#RFC7807) [[RFC9457]](https://httpwg.org/specs/rfc9421.html#RFC9457), such as an indicator that the wrong key material was used.",
      "createdAt": "2024-07-08T15:38:14Z",
      "updatedAt": "2024-07-08T19:24:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "That's a good idea. I will reach out to Justin and see if there is interested to do so. Maybe there is the potential to share problem types between digests and signatures.",
          "createdAt": "2024-07-08T19:24:32Z",
          "updatedAt": "2024-07-08T19:24:32Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOMO7RzM6QVuBr",
      "title": "Add complete request-response examples",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/8",
      "state": "OPEN",
      "author": "ioggstream",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "## I expect\r\n\r\n- add complete request-response examples\r\n\r\n## Instead \r\n\r\n- only responses are present",
      "createdAt": "2024-07-21T21:44:18Z",
      "updatedAt": "2024-07-25T09:46:04Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "Opened https://github.com/tus/draft-digest-fields-problem-types/pull/14 to address this.",
          "createdAt": "2024-07-25T09:46:04Z",
          "updatedAt": "2024-07-25T09:46:04Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOMO7RzM6QVuJS",
      "title": "Inherit examples from Digest Fields",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/9",
      "state": "OPEN",
      "author": "ioggstream",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "## I expect\r\n\r\n- inherit examples from https://www.rfc-editor.org/rfc/rfc9530.html",
      "createdAt": "2024-07-21T21:46:01Z",
      "updatedAt": "2024-07-25T09:19:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "I looked at the examples and only [C.3.  Server Does Not Support Client Algorithm and Returns an Error](https://www.rfc-editor.org/rfc/rfc9530.html#name-server-does-not-support-cli) contains an error response caused by integrity fields. That one even uses problem details.\r\n\r\nDo you think we should inherit other examples as well?",
          "createdAt": "2024-07-25T09:19:30Z",
          "updatedAt": "2024-07-25T09:19:30Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOMO7RzM6QVx9Y",
      "title": "Unsupported algorithm's feedback",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/issues/12",
      "state": "OPEN",
      "author": "ioggstream",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "## Notes\r\n\r\n\r\n- can problem details use normative language WRT identity fields (e.",
      "createdAt": "2024-07-21T22:35:26Z",
      "updatedAt": "2024-07-25T09:22:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "body": "Can you expand on this point a bit?",
          "createdAt": "2024-07-25T09:22:33Z",
          "updatedAt": "2024-07-25T09:22:33Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 7,
      "id": "PR_kwDOMO7RzM50vNh5",
      "title": "Relax recommendations on client behavior",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/pull/7",
      "state": "MERGED",
      "author": "Acconut",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/tus/draft-digest-fields-problem-types/issues/3.",
      "createdAt": "2024-07-08T19:47:19Z",
      "updatedAt": "2024-07-08T19:51:02Z",
      "baseRepository": "tus/draft-digest-fields-problem-types",
      "baseRefName": "main",
      "baseRefOid": "d0bc9e78cdc4229c430176492416dce9880edf49",
      "headRepository": "tus/draft-digest-fields-problem-types",
      "headRefName": "client-behavior",
      "headRefOid": "9799388188e5fa431835b31add6ff0519f828f3f",
      "closedAt": "2024-07-08T19:51:02Z",
      "mergedAt": "2024-07-08T19:51:02Z",
      "mergedBy": "Acconut",
      "mergeCommit": {
        "oid": "fb282e191b8a5e173abad5da2a6fd70b0254504d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 10,
      "id": "PR_kwDOMO7RzM52Bjgn",
      "title": "Preliminary editorial",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/pull/10",
      "state": "CLOSED",
      "author": "ioggstream",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "## This PR\r\n\r\n- preliminary editorial stuff",
      "createdAt": "2024-07-21T22:04:52Z",
      "updatedAt": "2024-07-21T22:10:06Z",
      "baseRepository": "tus/draft-digest-fields-problem-types",
      "baseRefName": "main",
      "baseRefOid": "97cc1f49760107fd0b34e7d617581ef01ecc2969",
      "headRepository": "ioggstream/draft-digest-fields-problem-types",
      "headRefName": "ioggstream-editorial",
      "headRefOid": "b8735692f7ad04173d8464fcd9295c74a5637cc6",
      "closedAt": "2024-07-21T22:09:37Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ioggstream",
          "authorAssociation": "CONTRIBUTOR",
          "body": "superseeded by multiple, smaller PR",
          "createdAt": "2024-07-21T22:10:02Z",
          "updatedAt": "2024-07-21T22:10:02Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 11,
      "id": "PR_kwDOMO7RzM52BjyL",
      "title": "Terminology from DIGEST.",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/pull/11",
      "state": "MERGED",
      "author": "ioggstream",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "## This PR\r\n\r\n- reuse terminology from DIGEST",
      "createdAt": "2024-07-21T22:09:26Z",
      "updatedAt": "2024-07-22T07:58:14Z",
      "baseRepository": "tus/draft-digest-fields-problem-types",
      "baseRefName": "main",
      "baseRefOid": "97cc1f49760107fd0b34e7d617581ef01ecc2969",
      "headRepository": "ioggstream/draft-digest-fields-problem-types",
      "headRefName": "ioggstream-editorial-1",
      "headRefOid": "57c899e0b66d87f0d8f8d25feb212c7566dd8939",
      "closedAt": "2024-07-22T07:58:14Z",
      "mergedAt": "2024-07-22T07:58:14Z",
      "mergedBy": "Acconut",
      "mergeCommit": {
        "oid": "8c1f4c152e8df4e0c17cadf8d1c8da1b6158675c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMO7RzM6CljOa",
          "commit": {
            "abbreviatedOid": "57c899e"
          },
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thank you very much!",
          "createdAt": "2024-07-22T07:54:48Z",
          "updatedAt": "2024-07-22T07:54:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOMO7RzM52Blbr",
      "title": "Unsupported algos",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/pull/13",
      "state": "OPEN",
      "author": "ioggstream",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-21T22:36:07Z",
      "updatedAt": "2024-07-25T16:32:32Z",
      "baseRepository": "tus/draft-digest-fields-problem-types",
      "baseRefName": "main",
      "baseRefOid": "8c1f4c152e8df4e0c17cadf8d1c8da1b6158675c",
      "headRepository": "ioggstream/draft-digest-fields-problem-types",
      "headRefName": "ioggstream-editorial-2",
      "headRefOid": "ff04ad793bfba858879ef69f4712c6a722c9d194",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMO7RzM6DDNoV",
          "commit": {
            "abbreviatedOid": "fba3606"
          },
          "author": "Acconut",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Thank you very much for this PR!",
          "createdAt": "2024-07-25T08:26:25Z",
          "updatedAt": "2024-07-25T09:11:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\none of the hashing algorithms referenced in the integrity or integrity preference fields present in the request,\r\n```\r\n\r\nThe intention behind this problem type was that at least one algorithm is unsupported and the server wants to communicate this. Of course, the server could also just ignore that algorithm, but it might not want to do this. With this change, it sounds like the problem type is for cases when all hashing algorithms are unsupported.",
              "createdAt": "2024-07-25T08:26:25Z",
              "updatedAt": "2024-07-25T09:11:42Z"
            },
            {
              "originalPosition": 34,
              "body": "I like the usage of a preference being set to 0 to indicate that this algorithm is not acceptable. Do we still need the `unsupport-algorithm` member then? If not, we can get rid of it. The advantage of integrity preference fields would also be that the sender can indicate that multiple algorithms are unsupported.",
              "createdAt": "2024-07-25T08:32:38Z",
              "updatedAt": "2024-07-25T09:11:42Z"
            },
            {
              "originalPosition": 63,
              "body": "Is `Want-Repr-Digest` the correct field here? The server doesn't want to request the digest from the client, but just indicate that the client's requested algorithm cannot be fulfilled.\r\n\r\nMaybe for those cases we do need the `unsupported-algorithm` member.",
              "createdAt": "2024-07-25T08:54:07Z",
              "updatedAt": "2024-07-25T09:11:42Z"
            },
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nNote that a request may contain more than one integrity field.\r\nThis problem type can also be used when a request contains an integrity preference field, e.g.\r\n```\r\n\r\nDoes it make sense to split this sentence?  They don't seem to be connected directly.",
              "createdAt": "2024-07-25T08:55:19Z",
              "updatedAt": "2024-07-25T09:11:42Z"
            },
            {
              "originalPosition": 13,
              "body": "Do you see a reason why this shouldn't use normative language here?",
              "createdAt": "2024-07-25T09:11:25Z",
              "updatedAt": "2024-07-25T09:11:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMO7RzM6DHosd",
          "commit": {
            "abbreviatedOid": "fba3606"
          },
          "author": "ioggstream",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T16:28:42Z",
          "updatedAt": "2024-07-25T16:28:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I agree. This is a tricky point, because the server is not required to process all algorithms.\r\n\r\nWe need to decide whether this problem-type applies to just one of the algorithms, or to all of the algorithms.\r\n\r\nProbably we need to re-examine this point after some time, so I leave this thread open.",
              "createdAt": "2024-07-25T16:28:42Z",
              "updatedAt": "2024-07-25T16:33:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMO7RzM6DHqN6",
          "commit": {
            "abbreviatedOid": "fba3606"
          },
          "author": "ioggstream",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T16:31:57Z",
          "updatedAt": "2024-07-25T16:31:58Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "We can clarify that IF you send a problem-type response, you SHOULD then send an integrity preference field.\r\nIn this case, we are not only defining a problem-type, but even defining an associate behavior wrt to the fields that need to be used in conjunciton with it.",
              "createdAt": "2024-07-25T16:31:57Z",
              "updatedAt": "2024-07-25T16:31:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOMO7RzM52cR6n",
      "title": "Add requests to examples",
      "url": "https://github.com/tus/draft-digest-fields-problem-types/pull/14",
      "state": "OPEN",
      "author": "Acconut",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "In response to the feedback from https://github.com/tus/draft-digest-fields-problem-types/issues/8. I didn't touch the examples for unsupported hashing algorithms, because @ioggstream already does so in #13.",
      "createdAt": "2024-07-25T09:45:38Z",
      "updatedAt": "2024-07-25T09:45:38Z",
      "baseRepository": "tus/draft-digest-fields-problem-types",
      "baseRefName": "main",
      "baseRefOid": "8c1f4c152e8df4e0c17cadf8d1c8da1b6158675c",
      "headRepository": "tus/draft-digest-fields-problem-types",
      "headRefName": "req-res",
      "headRefOid": "3fe92928f16f494e775b0e14cceb52572af93712",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}